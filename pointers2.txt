       char *line = NULL ;
    size_t len = 0 ;
    ssize_t read ;
    int i = 0 ;
    while ((read = getline(&line, &len, fp)) != -1)
    {
        // printf("%s", line) ;
        rowStore[i] = atoi(line) ;
        i++ ;
    }
    fclose(fp) ;
    if (line)
        free(line) ;
}
/**
 * @brief This function is used to create the threads and then send the data to the function
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
int main(int argc, char *argv[])
{
    // printf("%s", argv[1]) ;
    // printf("%d", atoi(argv[2])) ;
    FILE *fp = fopen(argv[1], "r") ;
    int num = atoi(argv[2]) ;
    int i = 0, j = 0 ;
    pthread_t tid[num] ;
    struct fileReader fr[num] ;
    preProcess(fp) ;
    for (i = 0; i < num; i++)
    {
        fr[i].i = i ;
        fr[i].j = j ;
        fr[i].rowToRead = i ;
        strcpy(fr[i].filename, argv[1]) ;
        pthread_create(&tid[i], NULL, readMyFile, &fr[i]) ;
    }
    for (i = 0; i < num; i++)
    {
        pthread_join(tid[i], NULL) ;
    }
    for (i = 0; i < num; i++)
    {
        printf("%d ", rowStore[i]) ;
    }
    printf("\n") ;
    return 0 ;
}

Output

Input

./a.out input.txt 4

Output

1 2 3 4

Note: The input file contains only numbers and the number of rows in the file is equal to the number of threads.

My Personal Notes arrow_drop_up Save

Recommended Posts: C Program to read a file and print the number of lines, words and characters in the file

C Program to read a file and print the number of lines, words and characters in the file using threads

C Program to read a file and print the number of lines, words and characters in the file using fork()

C Program to read a file and print the number of lines, words and characters in the file using
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
int main(int argc, char *argv[])
{
    clock_t t ;
    t = clock() ;
    FILE *fp = fopen(argv[1], "r") ;
    preProcess(fp) ;
    int i = 0 ;
    int j = 0 ;
    int rowToRead = 0 ;
    struct fileReader *fr = (struct fileReader *)malloc(sizeof(struct fileReader)) ;
    fr->filename = argv[1] ;
    fr->rowToRead = rowToRead ;
    fr->i = i ;
    fr->j = j ;
    pthread_t thread1 ;
    pthread_create(&thread1, NULL, readMyFile, (void *)fr) ;
    pthread_join(thread1, NULL) ;
    t = clock() - t ;
    double time_taken = ((double)t)/CLOCKS_PER_SEC ;
    printf("It took %f seconds to execute \n", time_taken) ;
    return 0 ;
}
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
int main(int argc, char *argv[])
{
    struct fileReader fr[3] ;
    pthread_t tid[3] ;
    int i = 0, j = 0, k = 0 ;
    FILE *fp = fopen("input.txt", "r") ;
    if (fp == NULL)
    {
        printf("File not found") ;
        exit(1) ;
    }
    preProcess(fp) ;
    for (i = 0 ; i < 3 ; i++)
    {
        fr[i].i = i ;
        fr[i].j = j ;
        fr[i].rowToRead = i ;
        strcpy(fr[i].filename, "input.txt") ;
        pthread_create(&tid[i], NULL, readMyFile, (void *)&fr[i]) ;
    }
    for (i = 0 ; i < 3 ; i++)
    {
        pthread_join(tid[i], NULL) ;
    }
    printf("Row 1 : %d

", rowStore[0]) ;
    printf("Row 2 : %d

", rowStore[1]) ;
    printf("Row 3 : %d

", rowStore[2]) ;
    return 0 ;
}

Output

Row 1 : 1
Row 2 : 1
Row 3 : 1

My Personal Notes arrow_drop_up Save

Recommended Posts: C program to read a file and print lines in reverse order

C program to read a file and print the lines which are not starting with a vowel

C program to read a file and print the lines which are not starting with a vowel

C program to read a file and print the lines which are not starting with a vowel

C program to read a file and print the lines which are not starting with a vowel

C program to read a file and print the lines which are not starting with a vowel

C program to read a file and print the lines which are not starting with a vowel
